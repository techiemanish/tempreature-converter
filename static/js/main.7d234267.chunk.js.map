{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["module","exports","App","React","useState","f","c","temp","updatedTemp","id","className","for","name","placeholder","value","onChange","event","target","toFixed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gLAAAA,EAAOC,QAAU,IAA0B,kC,oHC6B3BC,MAvBhB,WACC,MAA4BC,IAAMC,SAAS,CAACC,EAAI,EAAIC,EAAI,IAAxD,mBAAOC,EAAP,KAAaC,EAAb,KAYC,OACE,yBAAKC,GAAG,UACN,qDACH,yBAAKC,UAAU,eAAc,2BAAOC,IAAI,WAAX,WAAoC,6BACjE,2BAAOC,KAAO,UAAWC,YAAc,yBAAyBC,MAASP,EAAKD,EAAGS,SAdjE,SAACC,GAAD,OAAWR,EAAY,CACxCF,EAAIU,EAAMC,OAAOH,MACjBT,GAA2B,GAArBW,EAAMC,OAAOH,MAAU,EAAI,IAAII,QAAQ,QAY6D,6BADzG,0BAEqC,6BACrC,yBAAKR,UAAU,eAAc,2BAAOC,IAAI,cAAX,cAA0C,6BACvE,2BAAOC,KAAO,aAAaC,YAAc,yBAAyBC,MAASP,EAAKF,EAAGU,SAZhE,SAACC,GAAD,OAAWR,EAAY,CAC3CF,GAAkC,IAA3BU,EAAMC,OAAOH,MAAQ,IAAQ,GAAGI,QAAQ,GAC/Cb,EAAIW,EAAMC,OAAOH,cCJJK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7d234267.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nfunction App() {\n\tconst [temp, updatedTemp] = React.useState({f : 0 , c : 0});\n\t\n\tconst toCelcius = (event) => updatedTemp({\n\t\tc : event.target.value,\n\t\tf : (+event.target.value * 9/5 + 32).toFixed(2)\n\t});\n\t\n\tconst toFahrenheit = (event) => updatedTemp({\n\t\tc : ((+event.target.value - 32) * 5/9).toFixed(2),\n\t\tf : event.target.value\n\t});\n\t\n  return (\n    <div id=\"header\">\n      <h1>Tempreature Converter</h1>\n\t  <div className=\"tempreature\"><label for=\"celcius\">Celcius</label><br/>\n\t  <input name = \"celcius\"  placeholder = \"Enter Tempreature in C\" value = {temp.c} onChange ={toCelcius} /><br/>\n\t  &nbsp;&nbsp;&#8693;&nbsp;&nbsp;</div><br/>\n\t  <div className=\"tempreature\"><label for=\"fahrenheit\">Fahrenheit</label><br/>\n\t  <input name = \"fahrenheit\" placeholder = \"Enter Tempreature in F\" value = {temp.f} onChange ={toFahrenheit}/></div>\n    </div>\n  );\n}export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}